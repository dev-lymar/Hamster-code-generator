name: CI/CD Hamster workflow

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install requirements
        run: pip install -r requirements-dev.txt

      - name: Lint Ruff
        run: ruff check .

      - name: Lint Flake8
        run: flake8 .

  build_and_push_to_dockerhub:
    runs-on: ubuntu-latest
    needs: lint
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/hamster_bot:v1.8.6

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_dockerhub
    steps:
      - uses: actions/checkout@v2
      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          source: "redis.conf,Makefile,docker-compose.yml,docker-compose.prod.yml"
          target: "/home/${{ secrets.USERNAME }}/Hamster-generator"

      - name: Execute deployment commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          script: |
            cd /home/${{ secrets.USERNAME }}/Hamster-generator
            
            sed -i 's/IMAGE_TAG=.*/IMAGE_TAG=v1.8.6/' .env.prod
            
            make prod-down
            make prod-up

  create-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build_and_push_to_dockerhub
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v1.8.6
          name: "Release v1.8.6"
          body: |
            Final release | üèñÔ∏è
          token: ${{ secrets.GITHUB_TOKEN }}

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.workflow }} successfully completed! 
            Version: ${{ github.ref_name }}